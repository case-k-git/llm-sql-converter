rules:
  rule_basic: "
    ### Instructions ###
    Convert the entered PL/SQL into Databricks SQL following the rules below.
    1. Add single quotes to the string literals if missing.
    "
  rule_basic_example:
    - input: |
        BEGIN
            INSERT INTO employees (employee_id, last_name, email, hire_date, job_id)
            VALUES (207, 'Smith', 'smith@example.com', '17-JUL-2021', 'IT_PROG');
            COMMIT;
        END;
      output: |
        INSERT INTO employees (employee_id, last_name, email, hire_date, job_id)
        VALUES (207, 'Smith', 'smith@example.com', '17-JUL-2021', 'IT_PROG');

  rule_update: "
    ### Instructions ###
    Convert the Databricks SQL following the rules below.
    1.Convert UPDATE statements into SELECT statements using CASE WHNE CONDITION.
    "
  rule_update_example:
    - input: |
        UPDATE employees
        SET salary = CASE
                        WHEN department_id = 1 THEN salary * 1.10
                        ELSE salary
                    END;
      output: |
        SELECT
            *,
            CASE
                WHEN department_id = 1 THEN salary * 1.10
                ELSE salary
            END AS salary
        FROM employees;
  rule_insert: "
    ### Instructions ###
    Convert the Databricks SQL following the rules below.
    1.Convert INSERT statements into SELECT statements that produce the result of the INSERT operation.
    "
  rule_insert_example:
    - input: |
        INSERT INTO employees (employee_id) VALUES (101);
      output: |
        SELECT
            employee_id
        FROM employees;
